[alias]
	a = "add"
	aa = "add --all"
	amend = "commit -a --amend"
	append = "commit -a --amend --no-edit"
	apply = "stash apply"
	assume = "update-index --assume-unchanged"
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	b = "branch"
	br = "branch -r"
	branch-name = "!git rev-parse --abbrev-ref HEAD"
	c = "commit"
	ca = "commit --all"
	contributors = "shortlog --summary --numbered"
	cp = "cherry-pick"
	cr = "!git add -u && git dc && read && git commit -m"
	d = "diff"
	dc = "diff --cached"
	delete-merged-branches = "!f() { git checkout ${1-master} && git branch --merged ${1-master} | grep -v \"${1-master}$\" | xargs git branch -d; };f"
	discard = "checkout --"
	f = "fetch"
	fb = "!f() { git branch -a --contains $1; }; f"
	fcm = "!f() { git log --oneline --pretty=format:'%C(bold green)%h%Creset [%G?]-%C(yellow)%d%Creset %C(bold)%s%Creset | %C(green)%an%Creset, %C(blue)%ar%Creset' | fzf -q \"$1\" | cut -d\" \" -f1; };f"
	ft = "!f() { git describe --always --contains $1; }; f"
	g = "grep --break --heading --line-number"
	gh = "!f() { git rev-list --all | xargs git grep --break --heading --line-number \"$1\"; };f"
	ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"
	l = "log --color --graph --pretty=format:'%C(bold green)%h%Creset [%G?]-%C(yellow)%d%Creset %C(bold)%s%Creset | %C(green)%an%Creset, %C(blue)%ar%Creset'"
	list = "stash list"
	ll = "log --color --graph --pretty=format:'%C(bold green)%h%Creset [%G?]-%C(yellow)%d%Creset %C(bold)%s%Creset | %C(green)%an%Creset, %C(blue)%ar%Creset' --numstat"
	o = "checkout"
	ob = "checkout -b"
	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	pop = "stash pop"
	publish = "!git push -u origin $(git branch-name)"
	r = "remote"
	review = "difftool origin/master..."
	s = "status -sb"
	save = "stash push"
	snapshot = "!git stash push \"snapshot: $(date)\" && git stash apply \"stash@{0}\""
	sync = "!git fetch --all --prune && git rebase --rebase-merges --autostash $1 && :"
	sync-recursive = "!git fetch --all --prune && git submodule update --init --recursive && git rebase --rebase-merges --autostash $1 && :"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	u = "undo"
	unassume = "update-index --no-assume-unchanged"
	undo = "reset HEAD^ --soft"
	unpublish = "!git push origin :$(git branch-name)"
	unstage = "reset HEAD --"
	w = "whatchanged"

[color]
	ui = "auto"

[core]
	editor = "nvim"
	# pager = "delta"

[delta]
	line-numbers = true
	navigate = true
	side-by-side = true
	syntax-theme = "Dracula"

[filter "lfs"]
	clean = "git-lfs clean -- %f"
	process = "git-lfs filter-process"
	required = true
	smudge = "git-lfs smudge -- %f"

[init]
	defaultBranch = "main"

[interactive]
	# diffFilter = "delta --color-only"

[pull]
	ff = "only"
	rebase = true

[user]
	email = "klabun@indeed.com"
	name = "Konstantin Labun"
